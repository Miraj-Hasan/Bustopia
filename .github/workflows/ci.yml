name: Bustopia CI

# ────────────────
# Triggers
# ────────────────
on:
  push:
    branches: [ "main" ]          # build every commit on main
  pull_request:
    branches: [ "main" ]          # build PRs targeting main

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: fiihad/bustopia-backend
  IMAGE_FRONTEND: fiihad/bustopia-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read               # checkout
      packages: write              # needed by docker/login-action
    steps:
      # 1. Check out code
      - uses: actions/checkout@v4

      # 2. Set up Docker Buildx (modern builder with caching)
      - uses: docker/setup-buildx-action@v3

      # 3. Log in to Docker Hub
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build & push BACKEND
      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./BusTopia Backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      # 5. Build & push FRONTEND
      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Bustopia FrontEnd
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max

  # ────────────────────────────────────────────────────────────
  # (Optional) Test Job – keep separate to avoid blocking push.
  # Uncomment and edit when you have tests.
  # ────────────────────────────────────────────────────────────
  # test:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Pull backend image and run tests
  #       run: |
  #         docker pull ${{ env.IMAGE_BACKEND }}:${{ github.sha }}
  #         # e.g. docker run --rm $IMAGE_BACKEND:$GITHUB_SHA ./gradlew test
  #     - name: Pull frontend image and run tests
  #       run: |
  #         docker pull ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
  #         # e.g. docker run --rm $IMAGE_FRONTEND:$GITHUB_SHA npm test -- --ci
