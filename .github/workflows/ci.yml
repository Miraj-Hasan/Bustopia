name: Bustopia CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: fiihad/bustopia-backend
  IMAGE_FRONTEND: fiihad/bustopia-frontend

jobs:
  frontend-unit-tests:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.12.2'
          cache: 'npm'
          cache-dependency-path: './Bustopia FrontEnd/package-lock.json'

      - name: Install frontend dependencies
        working-directory: ./Bustopia FrontEnd
        run: npm ci

      - name: Run frontend unit tests
        working-directory: ./Bustopia FrontEnd
        run: |
          npm run test:ci:unit
          echo "Unit tests completed successfully"

  backend-unit-tests:
    name: Backend Unit Tests
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      GROK_KEY: ${{ secrets.GROK_KEY }}
      GROK_URL: ${{ secrets.GROK_URL }}
      SSLCOMMERZ_ID: ${{ secrets.SSLCOMMERZ_ID }}
      SSLCOMMERZ_PASSWORD: ${{ secrets.SSLCOMMERZ_PASSWORD }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          cache-dependency-path: './BusTopia Backend/pom.xml'

      - name: Run backend unit tests
        working-directory: ./BusTopia Backend
        run: |
          mvn clean test
          echo "Backend unit tests completed successfully"

  build-and-push:
    runs-on: ubuntu-latest
    needs: [frontend-unit-tests, backend-unit-tests]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./BusTopia Backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to:   type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Bustopia FrontEnd
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to:   type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max

  e2e-tests:
    name: Run Cypress E2E against pushed images
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Docker network
        run: docker network create bustopia-network

      - name: Start backend container
        run: |
          docker run -d \
            --name backend \
            --network bustopia-network \
            -p 8080:8080 \
            -p 8443:8443 \
            -e FRONTEND_ORIGIN="https://localhost:3000" \
            -e BACKEND_ORIGIN="https://localhost:8443" \
            -e DB_URL="${{ secrets.DB_URL }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASS="${{ secrets.DB_PASS }}" \
            -e REDIS_HOST="${{ secrets.REDIS_HOST }}" \
            -e REDIS_PORT="${{ secrets.REDIS_PORT }}" \
            -e REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e JWT_EXPIRATION="${{ secrets.JWT_EXPIRATION }}" \
            -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
            -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
            -e GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}" \
            -e MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}" \
            -e MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}" \
            -e AWS_ACCESS_KEY="${{ secrets.AWS_ACCESS_KEY }}" \
            -e AWS_SECRET_KEY="${{ secrets.AWS_SECRET_KEY }}" \
            -e AWS_REGION="${{ secrets.AWS_REGION }}" \
            -e AWS_BUCKET_NAME="${{ secrets.AWS_BUCKET_NAME }}" \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            -e GROK_KEY="${{ secrets.GROK_KEY }}" \
            -e GROK_URL="${{ secrets.GROK_URL }}" \
            -e SSLCOMMERZ_ID="${{ secrets.SSLCOMMERZ_ID }}" \
            -e SSLCOMMERZ_PASSWORD="${{ secrets.SSLCOMMERZ_PASSWORD }}" \
            fiihad/bustopia-backend:latest

      - name: Start frontend container
        run: |
          docker run -d \
            --name frontend \
            --network bustopia-network \
            -p 3001:80 \
            -p 3000:443 \
            -e VITE_API_BASE_URL="https://localhost:8443" \
            fiihad/bustopia-frontend:latest

      - name: Wait for services to start
        run: sleep 30

      - name: Check container status
        run: |
          docker ps -a
          docker logs backend --tail 20
          docker logs frontend --tail 50 || echo "No frontend logs"

      - name: Wait for backend HTTPS
        run: timeout 60 bash -c 'until nc -z localhost 8443; do sleep 1; done' || (echo "Backend timeout" && exit 1)

      - name: Seed test user
        run: |
          curl -k -X POST https://localhost:8443/api/register \
            -H "Content-Type: application/json" \
            -d '{"email":"mirajhasan1692001@gmail.com","password":"123","name":"Test User","phone":"+8801234567890","gender":"MALE"}' || echo "User may already exist"

      - name: Install dependencies & run Cypress
        working-directory: "./Bustopia FrontEnd"
        run: |
          npm ci
          npm run build
          npm run test:ci
