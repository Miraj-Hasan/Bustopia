name: Bustopia CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: fiihad/bustopia-backend
  IMAGE_FRONTEND: fiihad/bustopia-frontend

jobs:
  build-and-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # 1. Checkout the repo
      - uses: actions/checkout@v4

      # 2. Setup Docker Buildx
      - uses: docker/setup-buildx-action@v3

      # 3. Login to Docker Hub
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build backend image WITHOUT pushing
      - name: Build backend image
        uses: docker/build-push-action@v5
        id: backend-build
        with:
          context: ./BusTopia Backend
          push: false
          tags: ${{ env.IMAGE_BACKEND }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      # 5. Run backend tests inside the built image (using Maven)
      - name: Run backend tests
        run: |
          docker run --rm ${{ env.IMAGE_BACKEND }}:latest mvn test

      # 6. Push backend image if tests passed
      - name: Push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./BusTopia Backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}

      # 7. Build & push frontend image
      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Bustopia FrontEnd
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max
