name: Bustopia CI

# ────────────────
# Triggers
# ────────────────
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_BACKEND: fiihad/bustopia-backend
  IMAGE_FRONTEND: fiihad/bustopia-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./BusTopia Backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache
          cache-to:   type=registry,ref=${{ env.IMAGE_BACKEND }}:buildcache,mode=max

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Bustopia FrontEnd
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache
          cache-to:   type=registry,ref=${{ env.IMAGE_FRONTEND }}:buildcache,mode=max

  e2e-tests:
    name: Run Cypress E2E against pushed images
    runs-on: ubuntu-latest
    needs: build-and-push

    services:
      backend:
        image: fiihad/bustopia-backend:latest
        ports:
          - 8443:8443
        env:
          FRONTEND_ORIGIN:       "https://localhost:3000"
          BACKEND_ORIGIN:        "https://localhost:8443"
          DB_URL:                ${{ secrets.DB_URL }}
          DB_USER:               ${{ secrets.DB_USER }}
          DB_PASS:               ${{ secrets.DB_PASS }}
          REDIS_HOST:            ${{ secrets.REDIS_HOST }}
          REDIS_PORT:            ${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD:        ${{ secrets.REDIS_PASSWORD }}
          JWT_SECRET:            ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION:        ${{ secrets.JWT_EXPIRATION }}
          GOOGLE_CLIENT_ID:      ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET:  ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI:   ${{ secrets.GOOGLE_REDIRECT_URI }}
          MAIL_USERNAME:         ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD:         ${{ secrets.MAIL_PASSWORD }}
          AWS_ACCESS_KEY:        ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY:        ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION:            ${{ secrets.AWS_REGION }}
          AWS_BUCKET_NAME:       ${{ secrets.AWS_BUCKET_NAME }}
          OPENAI_API_KEY:        ${{ secrets.OPENAI_API_KEY }}
          GROK_KEY:              ${{ secrets.GROK_KEY }}
          GROK_URL:              ${{ secrets.GROK_URL }}
        options: >-
          --health-cmd="sh -c 'wget --no-check-certificate -q --spider https://localhost:8443/actuator/health 2>/dev/null || (exec 3<>/dev/tcp/localhost/8443 && echo -e \"GET /actuator/health HTTP/1.1\r\nHost: localhost\r\n\r\n\" >&3 && grep -q \"UP\" <&3)'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      frontend:
        image: fiihad/bustopia-frontend:latest
        ports:
          - 3000:443

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for services to start
        run: |
          echo "Waiting for services to start up..."
          sleep 30

      - name: Wait for backend HTTPS
        run: |
          echo "Waiting for backend on port 8443…"
          until nc -z localhost 8443; do sleep 1; done

      - name: Wait for frontend HTTPS
        run: |
          echo "Waiting for frontend on port 3000…"
          until nc -z localhost 3000; do sleep 1; done

      - name: Install dependencies & run Cypress
        working-directory: ./Bustopia\ FrontEnd
        run: |
          npm ci
          npm run build
          npm run test:ci
